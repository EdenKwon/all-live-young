<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="allliveyoung.wms.mapper.MemberMapper">

    <resultMap id="MemberResultMap" type="allliveyoung.wms.domain.Member">
        <id property="memberId" column="member_id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="email"/>
        <result property="roadNameAddress" column="road_name_address"/>
        <result property="detailsAddress" column="details_address"/>
        <result property="accountStatus" column="account_status"/>
        <result property="joinDate" column="join_date"/>
        <result property="lastLoginDate" column="last_login_date"/>
        <result property="roleType" column="role_type"/>
        <result property="businessNumber" column="business_number"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="isAgree" column="is_agree"/>
        <result property="agreeDate" column="agree_date"/>
    </resultMap>

    <!-- 회원 삽입 -->
    <insert id="insertMember" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO MEMBER (
            name,
            password,
            phone_number,
            email,
            road_name_address,
            details_address,
            account_status,
            join_date,
            last_login_date,
            role_type,
            business_number,
            warehouse_id,
            is_agree,
            agree_date
        ) VALUES (
                     #{name},
                     #{password},
                     #{phoneNumber},
                     #{email},
                     #{roadNameAddress},
                     #{detailsAddress},
                     #{accountStatus},
                     #{joinDate},
                     #{lastLoginDate},
                     #{roleType},
                     #{businessNumber},
                     #{warehouseId},
                     #{isAgree},
                     #{agreeDate}
                 )
    </insert>

    <!-- 회원 업데이트 -->
    <update id="updateMember">
        UPDATE MEMBER
        SET
            name = #{name},
            password = #{password},
            phone_number = #{phoneNumber},
            email = #{email},
            road_name_address = #{roadNameAddress},
            details_address = #{detailsAddress},
            account_status = #{accountStatus},
            join_date = #{joinDate},
            last_login_date = #{lastLoginDate},
            role_type = #{roleType},
            business_number = #{businessNumber},
            warehouse_id = #{warehouseId},
            is_agree = #{isAgree},
            agree_date = #{agreeDate}
        WHERE member_id = #{memberId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="deleteMember">
        DELETE FROM MEMBER WHERE member_id = #{memberId}
    </delete>

    <!-- 회원 ID로 조회 -->
    <select id="selectMemberById" resultMap="MemberResultMap">
        SELECT * FROM MEMBER WHERE member_id = #{memberId}
    </select>

    <!-- 이메일으로 회원 조회 -->
    <select id="selectMemberByEmail" resultMap="MemberResultMap">
        SELECT * FROM MEMBER WHERE email = #{email}
    </select>

    <!-- 이름과 전화번호로 회원 조회 -->
    <select id="selectMemberByNameAndPhone" resultMap="MemberResultMap">
        SELECT * FROM MEMBER WHERE name = #{name} AND phone_number = #{phoneNumber}
    </select>

    <!-- 이름, 전화번호, 사업자 번호로 회원 조회 -->
    <select id="selectMemberByNamePhoneAndBusinessNumber" resultMap="MemberResultMap">
        SELECT * FROM MEMBER WHERE name = #{name} AND phone_number = #{phoneNumber} AND business_number = #{businessNumber}
    </select>

    <!-- 회원 목록 조회 (관리자용) -->
    <select id="selectMembersByCriteria" resultMap="MemberResultMap">
        SELECT * FROM MEMBER
        WHERE (#{roleType} IS NULL OR role_type = #{roleType})
          AND (#{accountStatus} IS NULL OR account_status = #{accountStatus})
          AND (#{keyword} IS NULL OR name LIKE CONCAT('%', #{keyword}, '%') OR email LIKE CONCAT('%', #{keyword}, '%'))
    </select>

</mapper>
